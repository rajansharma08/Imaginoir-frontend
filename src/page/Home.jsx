import { useEffect, useState } from "react";
import { motion } from "framer-motion";
import { Card, FormField, Loader } from "../components";

const RenderCards = ({ data, title }) => {
  if (data?.length > 0) {
    return data.map((post, index) => (
      <motion.div
        key={post._id}
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: index * 0.05, duration: 0.4 }}
      >
        <Card {...post} />
      </motion.div>
    ));
  }

  return (
    <h2 className="mt-5 font-bold text-center text-[#6469ff] text-xl uppercase tracking-wider">
      {title}
    </h2>
  );
};

const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);
  const [searchText, setSearchText] = useState("");
  const [searchTimeout, setSearchTimeout] = useState(null);
  const [searchedResults, setSearchedResults] = useState(null);
  const baseURL = import.meta.env.VITE_API_URL;

  const fetchPosts = async () => {
    setLoading(true);
    try {
      const response = await fetch(`${baseURL}/api/v1/post`, {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
        },
      });

      if (response.ok) {
        const result = await response.json();
        setAllPosts(result.data.reverse());
      }
    } catch (err) {
      alert(err);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchPosts();
  }, []);

  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResult = allPosts.filter(
          (item) =>
            item.name.toLowerCase().includes(e.target.value.toLowerCase()) ||
            item.prompt.toLowerCase().includes(e.target.value.toLowerCase())
        );
        setSearchedResults(searchResult);
      }, 500)
    );
  };

  return (
    <motion.section
      className="max-w-7xl mx-auto px-4 sm:px-6"
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      transition={{ duration: 0.5 }}
    >
      <motion.div
        className="text-center"
        initial={{ y: -30, opacity: 0 }}
        animate={{ y: 0, opacity: 1 }}
        transition={{ duration: 0.6 }}
      >
        <h1 className="text-4xl sm:text-5xl font-extrabold text-[#222328] tracking-tight">
          The Community Showcase
        </h1>
        <p className="mt-4 text-[#666e75] text-lg max-w-2xl mx-auto leading-relaxed">
          Browse a collection of imaginative and visually stunning images
          generated by AI artists around the world.
        </p>
      </motion.div>

      <div className="mt-16">
        <FormField
          labelName="Search posts"
          type="text"
          name="text"
          placeholder="Search something creative..."
          value={searchText}
          handleChange={handleSearchChange}
        />
      </div>

      <div className="mt-12">
        {loading ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <motion.h2
                className="font-medium text-[#666e75] text-xl mb-6"
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
              >
                Showing results for:{" "}
                <span className="text-[#222328]">{searchText}</span>
              </motion.h2>
            )}
            <motion.div
              className="grid lg:grid-cols-4 md:grid-cols-3 sm:grid-cols-2 grid-cols-1 gap-6"
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              transition={{ delay: 0.1 }}
            >
              {searchText ? (
                <RenderCards
                  data={searchedResults}
                  title="No matching results found."
                />
              ) : (
                <RenderCards data={allPosts} title="No posts available yet." />
              )}
            </motion.div>
          </>
        )}
      </div>
    </motion.section>
  );
};

export default Home;
